# Use with Spring Profile RECEIVER "java -Dspring.profiles.active=RECEIVER"
spring.banner.location=classpath:true-connector-banner.txt
# Check the configurations !!!
### App setup
server.port=8444
server.max-http-header-size=15360
server.ssl.key-alias=execution-core-container
server.ssl.key-password=changeit
server.ssl.key-store-password=changeit
server.ssl.key-store=classpath:ssl-server.jks
server.ssl.enabled=true
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.SHA256=AC3BCAED1F01C63E18D4E0994C48D18EB6F79D01844564A4BA8476BE2D17F5E4

### DAPS Parameters (for getting token)
application.isEnabledDapsInteraction=false
#v1,v2,orbiter
application.dapsVersion=v2
#Orbiter
application.daps.orbiter.privateKey=
application.daps.orbiter.password=

application.targetDirectory=
application.dapsUrl= 
application.keyStoreName=
application.keyStorePassword=
application.keystoreAliasName=
application.connectorUUID=
#DAPS URI for validating
application.dapsJWKSUrl=
#Clearing House endpoint and local dir for hashing
application.clearingHouseUrl=
application.clearingHouseHashDir=

### Clearng-House
application.isEnabledClearingHouse=false

#D endpoint

#Connector URIs
application.uriSchema=http
application.uriAuthority=//w3id.org/engrd
#application.uriPath=/autogen/artifactResponseMessage/
application.uriConnector=/connector/

#IDSCP
application.idscp.isEnabled=false
application.idscp.server.port=8086

#HTTP port
http.port=8082

#Camel A endpoint
application.camelSenderPort=8888

#Camel B endpoint
application.camelReceiverPort=8890

#Open API Data APP
application.openDataAppReceiver=https://localhost:8083/data
#application.openDataAppReceiver=https://localhost:8083/incoming-data-app/routerBodyFormData
#application.openDataAppReceiver=https://localhost:8083/incoming-data-app/routerHttpHeader

# Body: binary
application.openDataAppReceiverRouter=mixed
# Body: form-data
#application.openDataAppReceiverRouter=form
# Body: http-header
#application.openDataAppReceiverRouter=http-header

# Body:binary
application.eccHttpSendRouter=mixed
# Body: form-data
#application.eccHttpSendRouter=form
# Body: http-header
#application.eccHttpSendRouter=http-header

#Utils
application.name=@project.artifactId@
build.version=@project.version@
build.timestamp=@timestamp@

#Camel - Spring Boot
camel.springboot.main-run-controller=true
camel.ssl.config.key-managers.key-password=changeit
camel.ssl.config.key-managers.key-store.resource=classpath:ssl-server.jks
camel.ssl.config.key-managers.key-store.password=changeit

#Camel - HTTP4
camel.component.http4.use-global-ssl-context-parameters=true

#Camel - Jetty
camel.component.jetty.use-global-ssl-context-parameters=true
camel.component.jetty.keystore=classpath:ssl-server.jks
camel.component.jetty.ssl-password=changeit
camel.component.jetty.ssl-key-password=changeit


information.model.version=@information.model.version@
application.basedir=@application.basedir@

# Enable WebSocket over Https -> Disable Idscp to use!
application.websocket.isEnabled=false
#Enable WS communication channel from/to DataAPP
application.dataApp.websocket.isEnabled=false

# Usage Control App
spring.ids.ucapp.baseUrl=http://localhost:9552/
application.isEnabledUsageControl=false

#Technical headers
application.technicalHeaders=header,Is-Enabled-DataApp-WebSocket,payload,Forward-To,Payload-Content-Type

#SelfDescription
application.selfdescription.description=Connector description
application.selfdescription.title=Connector title
application.selfdescription.curator=http://curatorURI.com
application.selfdescription.maintainer=http://maintainerURI.com
application.selfdescription.registrateOnStartup=false
application.selfdescription.brokerURL=

#For logging the response over WSS set to DEBUG, else leave empty
#logging.level.it.eng.idsa.businesslogic.processor.receiver=
